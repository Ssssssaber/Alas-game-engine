cmake_minimum_required(VERSION 3.10.0)
set (CMAKE_CXX_STANDARD 17)
project(alas_game_engine VERSION 0.1.0 LANGUAGES C CXX)

set(CMAKE_POSITION_INDEPENDENT_CODE TRUE)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE INTERNAL "")

option(SDL_VENDORED "Use vendored SDL library" ON)
option(SDL_WINDOWS "Use SDL2 for window creation" ON)
option(ALAS_ENABLE_ASSERTS "Use assertions during app running" ON)
option(ALAS_PROFILE "Enable profiling" ON)

set(OSBitness 32)
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(OSBitness 64)
endif()

if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  message(FATAL_ERROR "---- Clang not supported -----")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    message("---- Using GCC -----")
    set (FULL_OUTPUT_DIR "${CMAKE_SOURCE_DIR}/bin/GCC/${CMAKE_SYSTEM_NAME}${OSBitness}/${CMAKE_BUILD_TYPE}")
    set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${FULL_OUTPUT_DIR}/static")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
    message(FATAL_ERROR "---- Intel compiler not supported -----")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    message("---- Using MSVC -----")
    set (FULL_OUTPUT_DIR "${CMAKE_SOURCE_DIR}/bin/MSVC/${CMAKE_SYSTEM_NAME}${OSBitness}/")
    set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${FULL_OUTPUT_DIR}/static/")
endif()

set (CMAKE_LIBRARY_OUTPUT_DIRECTORY "${FULL_OUTPUT_DIR}")
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY "${FULL_OUTPUT_DIR}")

message ("---- Output dir: ${FULL_OUTPUT_DIR}")

add_subdirectory(AlasCore)
add_subdirectory(EntryPoint)
add_dependencies(alas_entry_point alas_engine_core)
